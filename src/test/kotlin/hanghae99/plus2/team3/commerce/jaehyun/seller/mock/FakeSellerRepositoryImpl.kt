package hanghae99.plus2.team3.commerce.jaehyun.seller.mock

import hanghae99.plus2.team3.commerce.jaehyun.seller.domain.Seller
import hanghae99.plus2.team3.commerce.jaehyun.seller.domain.SellerRepository
import hanghae99.plus2.team3.commerce.jaehyun.seller.infrastructure.SellerEntity
import java.util.*
import java.util.concurrent.atomic.AtomicLong

class FakeSellerRepositoryImpl(
    private val sellerMemoryRepository: SellerMemoryRepository
) : SellerRepository {
    override fun findByIdOrNull(sellerId: Long): Seller? {
        return sellerMemoryRepository.findByIdOrNull(sellerId)
    }

    override fun save(seller: Seller): Seller {
        return sellerMemoryRepository.save(seller)
    }
}

class SellerMemoryRepository{
    private val autoGeneratedId = AtomicLong(0)
    private val sellers = Collections.synchronizedList(mutableListOf<SellerEntity>())

    fun save(seller: Seller): Seller {
        val entity = SellerEntity(
            id = autoGeneratedId.incrementAndGet(),
            name = seller.name,
        )
        sellers.add(entity)
        return seller.copy(id = entity.id)
    }

    fun findByIdOrNull(sellerId: Long): Seller? {
        return sellers.find { it.id == sellerId }?.let {
            return Seller(
                id = it.id,
                name = it.name,
            )
        }
    }
}

